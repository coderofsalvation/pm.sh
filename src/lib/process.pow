process:log()
  date +"%Y-%m-%d %H:%M:%S $*"
  { which logger &>/dev/null && date +"%Y-%m-%d %H:%M:%S $*" | logger -i --tag pm; } &>/dev/null

process:gettmpfile(pname)
  echo /tmp/.pm.$(basename $pname)

process:getpidfile(pname)
  echo $(process:gettmpfile $pname).pid

process:getpid(pname)
  local pidfile=$(process:getpidfile $pname)
  if -f $pidfile
    cat $pidfile
  else 
    echo -1

process:getlockfile(pname)
  local tmpfile=$(process:gettmpfile $pname)
  echo $tmpfile.lock

process:getlogfile(pname)
  local tmpfile=$(process:gettmpfile $pname)
  echo $tmpfile.log

process:exec(pname)
  shift # remove first arg from argument array
  cnt=1
  lockfile=$(process:getlockfile $pname)
  trap "process:log \"#$cnt: $pname killed \$?\"; pkill -P $$" EXIT SIGHUP SIGINT SIGTERM
  while :
    process:log "#$cnt $pname started [pid $$]"
    flock -w 0 $lockfile $pname "$@" || exit 1
    code="$?"                                 # check exit status code
    exit="EXIT"
    if $code == 129
      exit=SIGHUP
    if $code == 130
      exit=SIGINT
    if $code == 143
      exit=SIGTERM
    process:log "#$cnt $pname $exit [$code]"
    sleep 5s                                  # wait for seconds until next boot
    cnt=$(($cnt+1))                           # increment counter

process:start(pname)
  shift # remove first arg from argument array
  pidfile=$(process:gettmpfile $pname).pid
  logfile=$(process:getlogfile $pname)
  lockfile=$(process:getlockfile $pname)
  flock -w 0 $lockfile sleep 0.1s || { echo "already started"; exit 1; }
  nohup $selfpath/pm exec $pname "$@" 1>$logfile.stdout 2>$logfile.stderr &
  echo $! > $pidfile 
  echo -e "press CTRL-C to stop logmonitor:\n"
  set -x
  tailf $logfile.stdout $logfile.stderr

process:stop(pname)
  shift # remove first arg
  pid=$(process:getpid $pname)
  if ! $pid == "-1"
    echo killing pid $pid 
    rm $(process:getpidfile $pname)
    pkill -P $pid
  else
    echo "$pname is not running"

process:restart(pname)
  process:stop $pname &
  wait 
  process:start $pname

process:status(pname)
  ps=$(ps au)
  seen=()
  cols="$(echo "$ps" | head -n1)"                        # print cols header
  printf "%-10s %-10s %s\n" "APP" "STATUS" "$cols"
  echo "$ps" | grep "flock.*pm\..*\.lock" >> $tmpfile.ps # print psdata
  for lockfile in $(ls /tmp/.pm.*.lock)
    appname=${lockfile/*pm\./}
    appname=${appname/\.lock/}
    echo $appname
    flock -w 0 $lockfile sleep 0.1s && status=running || status=stopped
    if $status == "running"
      printf "%-10s %-10s" "$appname" "$status"
    else
      line="$(fgrep "$lockfile" $tmpfile.ps)"
      printf "%-10s %-10s %s\n" "$appname" "$status" "$line"
     
